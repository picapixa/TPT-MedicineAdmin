#pragma checksum "C:\Users\jrpal_000\Source\Repos\TPT-MMAS\TPT-MMAS\TPT-MMAS\View\PatientsPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "D60AB8A104E36E15035DDB39700E348A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TPT_MMAS.View
{
    partial class PatientsPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Nullable<global::System.Boolean>) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Nullable<global::System.Boolean>), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(global::Windows.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_TPT_MMAS_Shared_Control_PatientGridView_ItemsSource(global::TPT_MMAS.Shared.Control.PatientGridView obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Tag(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class PatientsPage_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPatientsPage_Bindings
        {
            private global::TPT_MMAS.Shared.Model.AdmittedPatient dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            public PatientsPage_obj2_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::TPT_MMAS.Shared.Model.AdmittedPatient data = args.NewValue as global::TPT_MMAS.Shared.Model.AdmittedPatient;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::TPT_MMAS.Shared.Model.AdmittedPatient was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::TPT_MMAS.Shared.Model.AdmittedPatient);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::TPT_MMAS.Shared.Model.AdmittedPatient) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IPatientsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // PatientsPage_obj2_Bindings

            public void SetDataRoot(global::TPT_MMAS.Shared.Model.AdmittedPatient newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TPT_MMAS.Shared.Model.AdmittedPatient obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Admission(obj.Admission, phase);
                    }
                }
            }
            private void Update_Admission(global::TPT_MMAS.Shared.Model.Admission obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_Patient(obj.Patient, phase);
                        this.Update_Admission_LatestFinding(obj.LatestFinding, phase);
                        this.Update_Admission_Room(obj.Room, phase);
                    }
                }
            }
            private void Update_Admission_Patient(global::TPT_MMAS.Shared.Model.Patient obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_Patient_FullNameAbbreviated(obj.FullNameAbbreviated, phase);
                    }
                }
            }
            private void Update_Admission_Patient_FullNameAbbreviated(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                }
            }
            private void Update_Admission_LatestFinding(global::TPT_MMAS.Shared.Model.Finding obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_LatestFinding_Diagnosis(obj.Diagnosis, phase);
                    }
                }
            }
            private void Update_Admission_LatestFinding_Diagnosis(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
            private void Update_Admission_Room(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
        }

        private class PatientsPage_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPatientsPage_Bindings
        {
            private global::TPT_MMAS.Shared.Model.AdmittedPatient dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::Windows.UI.Xaml.Controls.TextBlock obj19;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;

            private PatientsPage_obj15_BindingsTracking bindingsTracking;

            public PatientsPage_obj15_Bindings()
            {
                this.bindingsTracking = new PatientsPage_obj15_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 17:
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18:
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19:
                        this.obj19 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 20:
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::TPT_MMAS.Shared.Model.AdmittedPatient data = args.NewValue as global::TPT_MMAS.Shared.Model.AdmittedPatient;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::TPT_MMAS.Shared.Model.AdmittedPatient was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::TPT_MMAS.Shared.Model.AdmittedPatient);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::TPT_MMAS.Shared.Model.AdmittedPatient) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IPatientsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // PatientsPage_obj15_Bindings

            public void SetDataRoot(global::TPT_MMAS.Shared.Model.AdmittedPatient newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TPT_MMAS.Shared.Model.AdmittedPatient obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Remark(obj.Remark, phase);
                        this.Update_Admission(obj.Admission, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission(phase);
                    }
                }
            }
            private void Update_Remark(global::TPT_MMAS.Shared.Model.PatientAdministrationStatus obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj.ToString(), null);
                }
            }
            private void Update_Admission(global::TPT_MMAS.Shared.Model.Admission obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_Patient(obj.Patient, phase);
                        this.Update_Admission_LatestFinding(obj.LatestFinding, phase);
                        this.Update_Admission_Room(obj.Room, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission_Patient(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission_LatestFinding(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission_Room(phase);
                    }
                }
            }
            private void Update_Admission_Patient(global::TPT_MMAS.Shared.Model.Patient obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_Patient_FirstLastName(obj.FirstLastName, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission_Patient_FirstLastName(phase);
                    }
                }
            }
            private void Update_Admission_Patient_FirstLastName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                }
            }
            private void Update_Admission_LatestFinding(global::TPT_MMAS.Shared.Model.Finding obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Admission_LatestFinding_Diagnosis(obj.Diagnosis, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_Admission_LatestFinding_Diagnosis(phase);
                    }
                }
            }
            private void Update_Admission_LatestFinding_Diagnosis(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj19, obj, null);
                }
            }
            private void Update_Admission_Room(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                }
            }

            private void UpdateFallback_Admission(int phase)
            {
                this.UpdateFallback_Admission_Patient(phase);
                this.UpdateFallback_Admission_LatestFinding(phase);
                this.UpdateFallback_Admission_Room(phase);
            }

            private void UpdateFallback_Admission_Patient(int phase)
            {
                this.UpdateFallback_Admission_Patient_FirstLastName(phase);
            }

            private void UpdateFallback_Admission_Patient_FirstLastName(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, "Annie Edison", null);
                }
            }

            private void UpdateFallback_Admission_LatestFinding(int phase)
            {
                this.UpdateFallback_Admission_LatestFinding_Diagnosis(phase);
            }

            private void UpdateFallback_Admission_LatestFinding_Diagnosis(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj19, "Diagnosis pending", null);
                }
            }

            private void UpdateFallback_Admission_Room(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, "303", null);
                }
            }

            private class PatientsPage_obj15_BindingsTracking
            {
                global::System.WeakReference<PatientsPage_obj15_Bindings> WeakRefToBindingObj; 

                public PatientsPage_obj15_BindingsTracking(PatientsPage_obj15_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<PatientsPage_obj15_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        private class PatientsPage_obj22_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPatientsPage_Bindings
        {
            private global::TPT_MMAS.Shared.Model.Admission dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;

            public PatientsPage_obj22_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 23:
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 24:
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::TPT_MMAS.Shared.Model.Admission data = args.NewValue as global::TPT_MMAS.Shared.Model.Admission;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::TPT_MMAS.Shared.Model.Admission was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::TPT_MMAS.Shared.Model.Admission);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.StackPanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::TPT_MMAS.Shared.Model.Admission) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IPatientsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // PatientsPage_obj22_Bindings

            public void SetDataRoot(global::TPT_MMAS.Shared.Model.Admission newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TPT_MMAS.Shared.Model.Admission obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Patient(obj.Patient, phase);
                        this.Update_LabeledRoom(obj.LabeledRoom, phase);
                    }
                }
            }
            private void Update_Patient(global::TPT_MMAS.Shared.Model.Patient obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Patient_FullNameAbbreviated(obj.FullNameAbbreviated, phase);
                    }
                }
            }
            private void Update_Patient_FullNameAbbreviated(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj23, obj, null);
                }
            }
            private void Update_LabeledRoom(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                }
            }
        }

        private class PatientsPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPatientsPage_Bindings
        {
            private global::TPT_MMAS.View.PatientsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj11;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj12;
            private global::TPT_MMAS.Shared.Control.PatientGridView obj14;
            private global::Windows.UI.Xaml.Controls.AutoSuggestBox obj21;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj25;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj26;
            private global::Windows.UI.Xaml.Controls.Button obj27;
            private global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj28;

            private PatientsPage_obj1_BindingsTracking bindingsTracking;

            public PatientsPage_obj1_Bindings()
            {
                this.bindingsTracking = new PatientsPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 14:
                        this.obj14 = (global::TPT_MMAS.Shared.Control.PatientGridView)target;
                        break;
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)target;
                        break;
                    case 25:
                        this.obj25 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += (global::System.Object param0, global::Windows.UI.Xaml.RoutedEventArgs param1) =>
                        {
                        this.dataRoot.VM.GetAdmittedPatientsAsync();
                        };
                        break;
                    case 26:
                        this.obj26 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 27:
                        this.obj27 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 28:
                        this.obj28 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IPatientsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // PatientsPage_obj1_Bindings

            public void SetDataRoot(global::TPT_MMAS.View.PatientsPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TPT_MMAS.View.PatientsPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ShellViewModel(obj.ShellViewModel, phase);
                        this.Update_VM(obj.VM, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ShellViewModel(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM(phase);
                    }
                }
            }
            private void Update_ShellViewModel(global::TPT_MMAS.ViewModel.ShellViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ShellViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ShellViewModel_IsConnectedToDevice(obj.IsConnectedToDevice, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_ShellViewModel_IsConnectedToDevice(phase);
                    }
                }
            }
            private void Update_ShellViewModel_IsConnectedToDevice(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BooleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj28, obj, null);
                }
            }
            private void Update_VM(global::TPT_MMAS.ViewModel.PatientsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_IsLoading(obj.IsLoading, phase);
                        this.Update_VM_Patients(obj.Patients, phase);
                        this.Update_VM_AdmissionsSuggestion(obj.AdmissionsSuggestion, phase);
                        this.Update_VM_Device(obj.Device, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM_IsLoading(phase);
                    }
                }
            }
            private void Update_VM_IsLoading(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj12, obj);
                }
            }
            private void Update_VM_Patients(global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.AdmittedPatient> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_TPT_MMAS_Shared_Control_PatientGridView_ItemsSource(this.obj14, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj26, (global::System.Boolean)this.LookupConverter("NullListToBooleanConverter").Convert(obj, typeof(global::System.Boolean), "reverse", null));
                }
            }
            private void Update_VM_AdmissionsSuggestion(global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.Admission> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj21, obj, null);
                }
            }
            private void Update_VM_Device(global::TPT_MMAS.Shared.Model.MobileMedAdminSystem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_Device_MachineName(obj.MachineName, phase);
                        this.Update_VM_Device_IpAddress(obj.IpAddress, phase);
                    }
                }
            }
            private void Update_VM_Device_MachineName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj27, obj, null);
                }
            }
            private void Update_VM_Device_IpAddress(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj27, obj, null);
                }
            }

            private void UpdateFallback_ShellViewModel(int phase)
            {
                this.UpdateFallback_ShellViewModel_IsConnectedToDevice(phase);
            }

            private void UpdateFallback_ShellViewModel_IsConnectedToDevice(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, (global::Windows.UI.Xaml.Visibility) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Visibility), "Collapsed"));
                }
            }

            private void UpdateFallback_VM(int phase)
            {
                this.UpdateFallback_VM_IsLoading(phase);
            }

            private void UpdateFallback_VM_IsLoading(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj12, (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), "False"));
                }
            }

            private class PatientsPage_obj1_BindingsTracking
            {
                global::System.WeakReference<PatientsPage_obj1_Bindings> WeakRefToBindingObj; 

                public PatientsPage_obj1_BindingsTracking(PatientsPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<PatientsPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ShellViewModel(null);
                    UpdateChildListeners_VM(null);
                }

                public void PropertyChanged_ShellViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.ViewModel.ShellViewModel obj = sender as global::TPT_MMAS.ViewModel.ShellViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ShellViewModel_IsConnectedToDevice(obj.IsConnectedToDevice, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_ShellViewModel_IsConnectedToDevice(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsConnectedToDevice":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ShellViewModel_IsConnectedToDevice(obj.IsConnectedToDevice, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_ShellViewModel_IsConnectedToDevice(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TPT_MMAS.ViewModel.ShellViewModel cache_ShellViewModel = null;
                public void UpdateChildListeners_ShellViewModel(global::TPT_MMAS.ViewModel.ShellViewModel obj)
                {
                    if (obj != cache_ShellViewModel)
                    {
                        if (cache_ShellViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ShellViewModel).PropertyChanged -= PropertyChanged_ShellViewModel;
                            cache_ShellViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ShellViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ShellViewModel;
                        }
                    }
                }
                public void PropertyChanged_VM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.ViewModel.PatientsViewModel obj = sender as global::TPT_MMAS.ViewModel.PatientsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_VM_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    bindings.Update_VM_Patients(obj.Patients, DATA_CHANGED);
                                    bindings.Update_VM_AdmissionsSuggestion(obj.AdmissionsSuggestion, DATA_CHANGED);
                                    bindings.Update_VM_Device(obj.Device, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_VM_IsLoading(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsLoading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_VM_IsLoading(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Patients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_Patients(obj.Patients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AdmissionsSuggestion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_AdmissionsSuggestion(obj.AdmissionsSuggestion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Device":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_Device(obj.Device, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TPT_MMAS.ViewModel.PatientsViewModel cache_VM = null;
                public void UpdateChildListeners_VM(global::TPT_MMAS.ViewModel.PatientsViewModel obj)
                {
                    if (obj != cache_VM)
                    {
                        if (cache_VM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VM).PropertyChanged -= PropertyChanged_VM;
                            cache_VM = null;
                        }
                        if (obj != null)
                        {
                            cache_VM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VM;
                        }
                    }
                }
                public void PropertyChanged_VM_Patients(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.AdmittedPatient> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.AdmittedPatient>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_VM_Patients(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.AdmittedPatient> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.AdmittedPatient>;
                    }
                }
                public void PropertyChanged_VM_AdmissionsSuggestion(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.Admission> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.Admission>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_VM_AdmissionsSuggestion(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PatientsPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.Admission> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.Admission>;
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6:
                {
                    this.RootGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 7:
                {
                    this.DeviceStates = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 8:
                {
                    this.Mobile = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 9:
                {
                    this.Tablet = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 10:
                {
                    this.Desktop = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 12:
                {
                    this.pr_modalRing = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            case 13:
                {
                    this.CB_Patients = (global::TPT_MMAS.Shared.Control.OpenDownCommandBar)(target);
                }
                break;
            case 14:
                {
                    this.gv_patients = (global::TPT_MMAS.Shared.Control.PatientGridView)(target);
                    #line 193 "..\..\..\View\PatientsPage.xaml"
                    ((global::TPT_MMAS.Shared.Control.PatientGridView)this.gv_patients).ItemClick += this.OnPatientItemClick;
                    #line default
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.Grid element15 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 197 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)element15).RightTapped += this.OnPatientGridViewItemRightTapped;
                    #line default
                }
                break;
            case 16:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element16 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 211 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element16).Click += this.OnRemovePatientClick;
                    #line default
                }
                break;
            case 21:
                {
                    this.ASB_Patients = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    #line 171 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.ASB_Patients).TextChanged += this.AdmissionsTextBoxChanged;
                    #line 172 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.ASB_Patients).GotFocus += this.OnAdmissionsGotFocus;
                    #line 173 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.ASB_Patients).SuggestionChosen += this.OnAdmissionsTextBoxSuggestionChosen;
                    #line 174 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.ASB_Patients).QuerySubmitted += this.OnAdmissionsTextBoxQuerySubmitted;
                    #line default
                }
                break;
            case 25:
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element25 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 26:
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element26 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 188 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element26).Click += this.OnClearPatientsClick;
                    #line default
                }
                break;
            case 27:
                {
                    this.btn_deviceOptions = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 146 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.btn_deviceOptions).Click += this.OnDeviceOptionsButtonClick;
                    #line default
                }
                break;
            case 28:
                {
                    this.tbtn_login = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 156 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.tbtn_login).Checked += this.tbtn_login_CheckedChanged;
                    #line 156 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.tbtn_login).Unchecked += this.tbtn_login_CheckedChanged;
                    #line 156 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.tbtn_login).Click += this.DeviceConnectToggleButtonClick;
                    #line default
                }
                break;
            case 29:
                {
                    this.mfl_openViaCN = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 149 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)this.mfl_openViaCN).Click += this.OnDevicePortalButtonClick;
                    #line default
                }
                break;
            case 30:
                {
                    this.mfl_openViaIP = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 150 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)this.mfl_openViaIP).Click += this.OnDevicePortalButtonClick;
                    #line default
                }
                break;
            case 31:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element31 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 152 "..\..\..\View\PatientsPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element31).Click += this.OnChangeDeviceButtonClick;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    PatientsPage_obj1_Bindings bindings = new PatientsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.Grid element2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PatientsPage_obj2_Bindings bindings = new PatientsPage_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::TPT_MMAS.Shared.Model.AdmittedPatient) element2.DataContext);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.Grid element15 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PatientsPage_obj15_Bindings bindings = new PatientsPage_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::TPT_MMAS.Shared.Model.AdmittedPatient) element15.DataContext);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                }
                break;
            case 22:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element22 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    PatientsPage_obj22_Bindings bindings = new PatientsPage_obj22_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::TPT_MMAS.Shared.Model.Admission) element22.DataContext);
                    element22.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element22, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

