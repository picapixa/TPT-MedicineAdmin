//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace TPT_MMAS
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace TPT_MMAS.TPT_MMAS_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[53];
            _typeNameTable[0] = "TPT_MMAS.View.LoginPageViewModeVisibilitySwitcher";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "TPT_MMAS.ViewModel.ViewModelLocator";
            _typeNameTable[3] = "TPT_MMAS.ViewModel.MedicinesViewModel";
            _typeNameTable[4] = "TPT_MMAS.Shared.ViewModel.BaseViewModel";
            _typeNameTable[5] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[6] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[7] = "TPT_MMAS.ViewModel.DevicesMainViewModel";
            _typeNameTable[8] = "TPT_MMAS.ViewModel.PatientsViewModel";
            _typeNameTable[9] = "TPT_MMAS.Shared.ViewModel.PatientsViewModel";
            _typeNameTable[10] = "TPT_MMAS.Shared.ViewModel.PatientProfileViewModel";
            _typeNameTable[11] = "TPT_MMAS.ViewModel.ShellViewModel";
            _typeNameTable[12] = "TPT_MMAS.Shared.ViewModel.ShellViewModel";
            _typeNameTable[13] = "TPT_MMAS.Shell";
            _typeNameTable[14] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[16] = "TPT_MMAS.Shared.Model.Personnel";
            _typeNameTable[17] = "TPT_MMAS.Shared.Model.Person";
            _typeNameTable[18] = "TPT_MMAS.View.DebugPage";
            _typeNameTable[19] = "TPT_MMAS.View.Devices.DevicesRegisterPage";
            _typeNameTable[20] = "TPT_MMAS.View.Dialog.AddMedicineDialog";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[22] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[23] = "TPT_MMAS.Shared.Model.MedicineInventory";
            _typeNameTable[24] = "TPT_MMAS.View.Dialog.AddMedicineResult";
            _typeNameTable[25] = "System.Enum";
            _typeNameTable[26] = "System.ValueType";
            _typeNameTable[27] = "TPT_MMAS.Shared.Control.Iterator";
            _typeNameTable[28] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[29] = "Int32";
            _typeNameTable[30] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[31] = "TPT_MMAS.View.Dialog.AddPrescriptionDialog";
            _typeNameTable[32] = "System.Collections.ObjectModel.ObservableCollection`1<TPT_MMAS.Shared.Model.MedicineInventory>";
            _typeNameTable[33] = "System.Collections.ObjectModel.Collection`1<TPT_MMAS.Shared.Model.MedicineInventory>";
            _typeNameTable[34] = "String";
            _typeNameTable[35] = "System.DateTime";
            _typeNameTable[36] = "System.Nullable`1<System.DateTime>";
            _typeNameTable[37] = "TPT_MMAS.Shared.Model.Prescription";
            _typeNameTable[38] = "System.Collections.Generic.List`1<TPT_MMAS.Shared.Model.Prescription>";
            _typeNameTable[39] = "Boolean";
            _typeNameTable[40] = "TPT_MMAS.View.Dialog.LoginDialog";
            _typeNameTable[41] = "System.Nullable`1<TPT_MMAS.View.Dialog.LoginDialogResult>";
            _typeNameTable[42] = "TPT_MMAS.View.LicensesPage";
            _typeNameTable[43] = "TPT_MMAS.View.LoginPage";
            _typeNameTable[44] = "TPT_MMAS.View.MedicinesPage";
            _typeNameTable[45] = "TPT_MMAS.Shared.Model.Role";
            _typeNameTable[46] = "TPT_MMAS.View.PatientProfilePage";
            _typeNameTable[47] = "TPT_MMAS.Shared.Control.OpenDownCommandBar";
            _typeNameTable[48] = "Windows.UI.Xaml.Controls.CommandBar";
            _typeNameTable[49] = "TPT_MMAS.Shared.Control.PatientGridView";
            _typeNameTable[50] = "Double";
            _typeNameTable[51] = "TPT_MMAS.View.PatientsPage";
            _typeNameTable[52] = "TPT_MMAS.View.SettingsPage";

            _typeTable = new global::System.Type[53];
            _typeTable[0] = typeof(global::TPT_MMAS.View.LoginPageViewModeVisibilitySwitcher);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::TPT_MMAS.ViewModel.ViewModelLocator);
            _typeTable[3] = typeof(global::TPT_MMAS.ViewModel.MedicinesViewModel);
            _typeTable[4] = typeof(global::TPT_MMAS.Shared.ViewModel.BaseViewModel);
            _typeTable[5] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[6] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[7] = typeof(global::TPT_MMAS.ViewModel.DevicesMainViewModel);
            _typeTable[8] = typeof(global::TPT_MMAS.ViewModel.PatientsViewModel);
            _typeTable[9] = typeof(global::TPT_MMAS.Shared.ViewModel.PatientsViewModel);
            _typeTable[10] = typeof(global::TPT_MMAS.Shared.ViewModel.PatientProfileViewModel);
            _typeTable[11] = typeof(global::TPT_MMAS.ViewModel.ShellViewModel);
            _typeTable[12] = typeof(global::TPT_MMAS.Shared.ViewModel.ShellViewModel);
            _typeTable[13] = typeof(global::TPT_MMAS.Shell);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[16] = typeof(global::TPT_MMAS.Shared.Model.Personnel);
            _typeTable[17] = typeof(global::TPT_MMAS.Shared.Model.Person);
            _typeTable[18] = typeof(global::TPT_MMAS.View.DebugPage);
            _typeTable[19] = typeof(global::TPT_MMAS.View.Devices.DevicesRegisterPage);
            _typeTable[20] = typeof(global::TPT_MMAS.View.Dialog.AddMedicineDialog);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[23] = typeof(global::TPT_MMAS.Shared.Model.MedicineInventory);
            _typeTable[24] = typeof(global::TPT_MMAS.View.Dialog.AddMedicineResult);
            _typeTable[25] = typeof(global::System.Enum);
            _typeTable[26] = typeof(global::System.ValueType);
            _typeTable[27] = typeof(global::TPT_MMAS.Shared.Control.Iterator);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[29] = typeof(global::System.Int32);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[31] = typeof(global::TPT_MMAS.View.Dialog.AddPrescriptionDialog);
            _typeTable[32] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.MedicineInventory>);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.Collection<global::TPT_MMAS.Shared.Model.MedicineInventory>);
            _typeTable[34] = typeof(global::System.String);
            _typeTable[35] = typeof(global::System.DateTime);
            _typeTable[36] = typeof(global::System.Nullable<global::System.DateTime>);
            _typeTable[37] = typeof(global::TPT_MMAS.Shared.Model.Prescription);
            _typeTable[38] = typeof(global::System.Collections.Generic.List<global::TPT_MMAS.Shared.Model.Prescription>);
            _typeTable[39] = typeof(global::System.Boolean);
            _typeTable[40] = typeof(global::TPT_MMAS.View.Dialog.LoginDialog);
            _typeTable[41] = typeof(global::System.Nullable<global::TPT_MMAS.View.Dialog.LoginDialogResult>);
            _typeTable[42] = typeof(global::TPT_MMAS.View.LicensesPage);
            _typeTable[43] = typeof(global::TPT_MMAS.View.LoginPage);
            _typeTable[44] = typeof(global::TPT_MMAS.View.MedicinesPage);
            _typeTable[45] = typeof(global::TPT_MMAS.Shared.Model.Role);
            _typeTable[46] = typeof(global::TPT_MMAS.View.PatientProfilePage);
            _typeTable[47] = typeof(global::TPT_MMAS.Shared.Control.OpenDownCommandBar);
            _typeTable[48] = typeof(global::Windows.UI.Xaml.Controls.CommandBar);
            _typeTable[49] = typeof(global::TPT_MMAS.Shared.Control.PatientGridView);
            _typeTable[50] = typeof(global::System.Double);
            _typeTable[51] = typeof(global::TPT_MMAS.View.PatientsPage);
            _typeTable[52] = typeof(global::TPT_MMAS.View.SettingsPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_LoginPageViewModeVisibilitySwitcher() { return new global::TPT_MMAS.View.LoginPageViewModeVisibilitySwitcher(); }
        private object Activate_2_ViewModelLocator() { return new global::TPT_MMAS.ViewModel.ViewModelLocator(); }
        private object Activate_3_MedicinesViewModel() { return new global::TPT_MMAS.ViewModel.MedicinesViewModel(); }
        private object Activate_4_BaseViewModel() { return new global::TPT_MMAS.Shared.ViewModel.BaseViewModel(); }
        private object Activate_6_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_7_DevicesMainViewModel() { return new global::TPT_MMAS.ViewModel.DevicesMainViewModel(); }
        private object Activate_8_PatientsViewModel() { return new global::TPT_MMAS.ViewModel.PatientsViewModel(); }
        private object Activate_9_PatientsViewModel() { return new global::TPT_MMAS.Shared.ViewModel.PatientsViewModel(); }
        private object Activate_10_PatientProfileViewModel() { return new global::TPT_MMAS.Shared.ViewModel.PatientProfileViewModel(); }
        private object Activate_11_ShellViewModel() { return new global::TPT_MMAS.ViewModel.ShellViewModel(); }
        private object Activate_12_ShellViewModel() { return new global::TPT_MMAS.Shared.ViewModel.ShellViewModel(); }
        private object Activate_16_Personnel() { return new global::TPT_MMAS.Shared.Model.Personnel(); }
        private object Activate_17_Person() { return new global::TPT_MMAS.Shared.Model.Person(); }
        private object Activate_18_DebugPage() { return new global::TPT_MMAS.View.DebugPage(); }
        private object Activate_19_DevicesRegisterPage() { return new global::TPT_MMAS.View.Devices.DevicesRegisterPage(); }
        private object Activate_20_AddMedicineDialog() { return new global::TPT_MMAS.View.Dialog.AddMedicineDialog(); }
        private object Activate_23_MedicineInventory() { return new global::TPT_MMAS.Shared.Model.MedicineInventory(); }
        private object Activate_27_Iterator() { return new global::TPT_MMAS.Shared.Control.Iterator(); }
        private object Activate_32_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.MedicineInventory>(); }
        private object Activate_33_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TPT_MMAS.Shared.Model.MedicineInventory>(); }
        private object Activate_37_Prescription() { return new global::TPT_MMAS.Shared.Model.Prescription(); }
        private object Activate_38_List() { return new global::System.Collections.Generic.List<global::TPT_MMAS.Shared.Model.Prescription>(); }
        private object Activate_42_LicensesPage() { return new global::TPT_MMAS.View.LicensesPage(); }
        private object Activate_44_MedicinesPage() { return new global::TPT_MMAS.View.MedicinesPage(); }
        private object Activate_46_PatientProfilePage() { return new global::TPT_MMAS.View.PatientProfilePage(); }
        private object Activate_47_OpenDownCommandBar() { return new global::TPT_MMAS.Shared.Control.OpenDownCommandBar(); }
        private object Activate_49_PatientGridView() { return new global::TPT_MMAS.Shared.Control.PatientGridView(); }
        private object Activate_51_PatientsPage() { return new global::TPT_MMAS.View.PatientsPage(); }
        private object Activate_52_SettingsPage() { return new global::TPT_MMAS.View.SettingsPage(); }
        private void VectorAdd_32_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TPT_MMAS.Shared.Model.MedicineInventory>)instance;
            var newItem = (global::TPT_MMAS.Shared.Model.MedicineInventory)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TPT_MMAS.Shared.Model.MedicineInventory>)instance;
            var newItem = (global::TPT_MMAS.Shared.Model.MedicineInventory)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TPT_MMAS.Shared.Model.Prescription>)instance;
            var newItem = (global::TPT_MMAS.Shared.Model.Prescription)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  TPT_MMAS.View.LoginPageViewModeVisibilitySwitcher
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_LoginPageViewModeVisibilitySwitcher;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  TPT_MMAS.ViewModel.ViewModelLocator
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_ViewModelLocator;
                userType.AddMemberName("Medicines");
                userType.AddMemberName("DevicesMain");
                userType.AddMemberName("Patients");
                userType.AddMemberName("Patient");
                userType.AddMemberName("Shell");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  TPT_MMAS.ViewModel.MedicinesViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  TPT_MMAS.Shared.ViewModel.BaseViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_4_BaseViewModel;
                xamlType = userType;
                break;

            case 5:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                xamlType = userType;
                break;

            case 6:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_ObservableObject;
                xamlType = userType;
                break;

            case 7:   //  TPT_MMAS.ViewModel.DevicesMainViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  TPT_MMAS.ViewModel.PatientsViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.PatientsViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  TPT_MMAS.Shared.ViewModel.PatientsViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.BaseViewModel"));
                userType.Activator = Activate_9_PatientsViewModel;
                xamlType = userType;
                break;

            case 10:   //  TPT_MMAS.Shared.ViewModel.PatientProfileViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  TPT_MMAS.ViewModel.ShellViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.ShellViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  TPT_MMAS.Shared.ViewModel.ShellViewModel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.ViewModel.BaseViewModel"));
                userType.Activator = Activate_12_ShellViewModel;
                xamlType = userType;
                break;

            case 13:   //  TPT_MMAS.Shell
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("CurrentUser");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  TPT_MMAS.Shared.Model.Personnel
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TPT_MMAS.Shared.Model.Person"));
                userType.Activator = Activate_16_Personnel;
                userType.AddMemberName("FirstName");
                userType.AddMemberName("LastName");
                userType.AddMemberName("ID");
                userType.AddMemberName("MiddleName");
                userType.AddMemberName("Username");
                userType.AddMemberName("Title");
                userType.AddMemberName("Role");
                xamlType = userType;
                break;

            case 17:   //  TPT_MMAS.Shared.Model.Person
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_Person;
                userType.AddMemberName("FullName");
                userType.AddMemberName("FullNameAbbreviated");
                userType.AddMemberName("ShortName");
                userType.AddMemberName("FirstLastName");
                userType.AddMemberName("Photo");
                xamlType = userType;
                break;

            case 18:   //  TPT_MMAS.View.DebugPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_18_DebugPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  TPT_MMAS.View.Devices.DevicesRegisterPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_DevicesRegisterPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  TPT_MMAS.View.Dialog.AddMedicineDialog
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_20_AddMedicineDialog;
                userType.AddMemberName("NewMedicine");
                userType.AddMemberName("Result");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  TPT_MMAS.Shared.Model.MedicineInventory
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_MedicineInventory;
                userType.AddMemberName("ID");
                userType.AddMemberName("GenericName");
                userType.AddMemberName("BrandName");
                userType.AddMemberName("Dosage");
                userType.AddMemberName("StocksLeft");
                userType.AddMemberName("TimeLastAdded");
                userType.AddMemberName("TimeLastDispensed");
                userType.AddMemberName("Name");
                userType.AddMemberName("NameWithDosage");
                xamlType = userType;
                break;

            case 24:   //  TPT_MMAS.View.Dialog.AddMedicineResult
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Success", global::TPT_MMAS.View.Dialog.AddMedicineResult.Success);
                userType.AddEnumValue("AddFailed", global::TPT_MMAS.View.Dialog.AddMedicineResult.AddFailed);
                userType.AddEnumValue("Cancelled", global::TPT_MMAS.View.Dialog.AddMedicineResult.Cancelled);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  System.Enum
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 26:   //  System.ValueType
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 27:   //  TPT_MMAS.Shared.Control.Iterator
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_27_Iterator;
                userType.AddMemberName("Header");
                userType.AddMemberName("Value");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("MaxValue");
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Int32
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  TPT_MMAS.View.Dialog.AddPrescriptionDialog
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("SuggestedMedicines");
                userType.AddMemberName("AddedItem");
                userType.AddMemberName("AddedItems");
                userType.AddMemberName("IsRecurring");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.ObjectModel.ObservableCollection`1<TPT_MMAS.Shared.Model.MedicineInventory>
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TPT_MMAS.Shared.Model.MedicineInventory>"));
                userType.CollectionAdd = VectorAdd_32_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  System.Collections.ObjectModel.Collection`1<TPT_MMAS.Shared.Model.MedicineInventory>
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_Collection;
                userType.CollectionAdd = VectorAdd_33_Collection;
                xamlType = userType;
                break;

            case 34:   //  String
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  System.DateTime
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  System.Nullable`1<System.DateTime>
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  TPT_MMAS.Shared.Model.Prescription
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Prescription;
                userType.AddMemberName("ID");
                userType.AddMemberName("Medicine");
                userType.AddMemberName("Schedule");
                userType.AddMemberName("Amount");
                userType.AddMemberName("AddedOn");
                userType.AddMemberName("AddedBy");
                userType.AddMemberName("SelectedOn");
                userType.AddMemberName("Selector");
                userType.AddMemberName("LoadedOn");
                userType.AddMemberName("LoadedAt");
                userType.AddMemberName("LoadedBy");
                userType.AddMemberName("AdministeredOn");
                userType.AddMemberName("AdministeredBy");
                xamlType = userType;
                break;

            case 38:   //  System.Collections.Generic.List`1<TPT_MMAS.Shared.Model.Prescription>
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_38_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 39:   //  Boolean
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  TPT_MMAS.View.Dialog.LoginDialog
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("AuthenticatedUser");
                userType.AddMemberName("Result");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Nullable`1<TPT_MMAS.View.Dialog.LoginDialogResult>
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  TPT_MMAS.View.LicensesPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_LicensesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  TPT_MMAS.View.LoginPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  TPT_MMAS.View.MedicinesPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_MedicinesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  TPT_MMAS.Shared.Model.Role
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Staff", global::TPT_MMAS.Shared.Model.Role.Staff);
                userType.AddEnumValue("Nurse", global::TPT_MMAS.Shared.Model.Role.Nurse);
                userType.AddEnumValue("Doctor", global::TPT_MMAS.Shared.Model.Role.Doctor);
                userType.AddEnumValue("Admin", global::TPT_MMAS.Shared.Model.Role.Admin);
                xamlType = userType;
                break;

            case 46:   //  TPT_MMAS.View.PatientProfilePage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_PatientProfilePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  TPT_MMAS.Shared.Control.OpenDownCommandBar
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_47_OpenDownCommandBar;
                xamlType = userType;
                break;

            case 48:   //  Windows.UI.Xaml.Controls.CommandBar
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  TPT_MMAS.Shared.Control.PatientGridView
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_49_PatientGridView;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemColumns");
                userType.AddMemberName("ItemRows");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemHeight");
                userType.AddMemberName("ItemWidth");
                xamlType = userType;
                break;

            case 50:   //  Double
                xamlType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  TPT_MMAS.View.PatientsPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_PatientsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  TPT_MMAS.View.SettingsPage
                userType = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::TPT_MMAS.Shared.TPT_MMAS_Shared_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.WinRTXamlToolkit_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_ViewModelLocator_Medicines(object instance)
        {
            var that = (global::TPT_MMAS.ViewModel.ViewModelLocator)instance;
            return that.Medicines;
        }
        private object get_1_ViewModelLocator_DevicesMain(object instance)
        {
            var that = (global::TPT_MMAS.ViewModel.ViewModelLocator)instance;
            return that.DevicesMain;
        }
        private object get_2_ViewModelLocator_Patients(object instance)
        {
            var that = (global::TPT_MMAS.ViewModel.ViewModelLocator)instance;
            return that.Patients;
        }
        private object get_3_ViewModelLocator_Patient(object instance)
        {
            var that = (global::TPT_MMAS.ViewModel.ViewModelLocator)instance;
            return that.Patient;
        }
        private object get_4_ViewModelLocator_Shell(object instance)
        {
            var that = (global::TPT_MMAS.ViewModel.ViewModelLocator)instance;
            return that.Shell;
        }
        private object get_5_Shell_CurrentUser(object instance)
        {
            var that = (global::TPT_MMAS.Shell)instance;
            return that.CurrentUser;
        }
        private void set_5_Shell_CurrentUser(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shell)instance;
            that.CurrentUser = (global::TPT_MMAS.Shared.Model.Personnel)Value;
        }
        private object get_6_AddMedicineDialog_NewMedicine(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddMedicineDialog)instance;
            return that.NewMedicine;
        }
        private void set_6_AddMedicineDialog_NewMedicine(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddMedicineDialog)instance;
            that.NewMedicine = (global::TPT_MMAS.Shared.Model.MedicineInventory)Value;
        }
        private object get_7_AddMedicineDialog_Result(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddMedicineDialog)instance;
            return that.Result;
        }
        private void set_7_AddMedicineDialog_Result(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddMedicineDialog)instance;
            that.Result = (global::TPT_MMAS.View.Dialog.AddMedicineResult)Value;
        }
        private object get_8_Iterator_Header(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            return that.Header;
        }
        private void set_8_Iterator_Header(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_9_Iterator_Value(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            return that.Value;
        }
        private void set_9_Iterator_Value(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            that.Value = (global::System.Int32)Value;
        }
        private object get_10_Iterator_MinValue(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            return that.MinValue;
        }
        private void set_10_Iterator_MinValue(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            that.MinValue = (global::System.Int32)Value;
        }
        private object get_11_Iterator_HeaderTemplate(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            return that.HeaderTemplate;
        }
        private void set_11_Iterator_HeaderTemplate(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_12_Iterator_MaxValue(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            return that.MaxValue;
        }
        private void set_12_Iterator_MaxValue(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.Iterator)instance;
            that.MaxValue = (global::System.Int32)Value;
        }
        private object get_13_AddPrescriptionDialog_SuggestedMedicines(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            return that.SuggestedMedicines;
        }
        private void set_13_AddPrescriptionDialog_SuggestedMedicines(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            that.SuggestedMedicines = (global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Shared.Model.MedicineInventory>)Value;
        }
        private object get_14_MedicineInventory_ID(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.ID;
        }
        private void set_14_MedicineInventory_ID(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_15_MedicineInventory_GenericName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.GenericName;
        }
        private void set_15_MedicineInventory_GenericName(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.GenericName = (global::System.String)Value;
        }
        private object get_16_MedicineInventory_BrandName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.BrandName;
        }
        private void set_16_MedicineInventory_BrandName(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.BrandName = (global::System.String)Value;
        }
        private object get_17_MedicineInventory_Dosage(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.Dosage;
        }
        private void set_17_MedicineInventory_Dosage(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.Dosage = (global::System.String)Value;
        }
        private object get_18_MedicineInventory_StocksLeft(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.StocksLeft;
        }
        private void set_18_MedicineInventory_StocksLeft(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.StocksLeft = (global::System.Int32)Value;
        }
        private object get_19_MedicineInventory_TimeLastAdded(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.TimeLastAdded;
        }
        private void set_19_MedicineInventory_TimeLastAdded(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.TimeLastAdded = (global::System.DateTime)Value;
        }
        private object get_20_MedicineInventory_TimeLastDispensed(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.TimeLastDispensed;
        }
        private void set_20_MedicineInventory_TimeLastDispensed(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            that.TimeLastDispensed = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_21_MedicineInventory_Name(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.Name;
        }
        private object get_22_MedicineInventory_NameWithDosage(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.MedicineInventory)instance;
            return that.NameWithDosage;
        }
        private object get_23_AddPrescriptionDialog_AddedItem(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            return that.AddedItem;
        }
        private void set_23_AddPrescriptionDialog_AddedItem(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            that.AddedItem = (global::TPT_MMAS.Shared.Model.Prescription)Value;
        }
        private object get_24_AddPrescriptionDialog_AddedItems(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            return that.AddedItems;
        }
        private void set_24_AddPrescriptionDialog_AddedItems(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            that.AddedItems = (global::System.Collections.Generic.List<global::TPT_MMAS.Shared.Model.Prescription>)Value;
        }
        private object get_25_Prescription_ID(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.ID;
        }
        private void set_25_Prescription_ID(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_26_Prescription_Medicine(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.Medicine;
        }
        private void set_26_Prescription_Medicine(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.Medicine = (global::TPT_MMAS.Shared.Model.MedicineInventory)Value;
        }
        private object get_27_Prescription_Schedule(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.Schedule;
        }
        private void set_27_Prescription_Schedule(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.Schedule = (global::System.DateTime)Value;
        }
        private object get_28_Prescription_Amount(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.Amount;
        }
        private void set_28_Prescription_Amount(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.Amount = (global::System.Int32)Value;
        }
        private object get_29_Prescription_AddedOn(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.AddedOn;
        }
        private void set_29_Prescription_AddedOn(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.AddedOn = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_30_Prescription_AddedBy(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.AddedBy;
        }
        private void set_30_Prescription_AddedBy(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.AddedBy = (global::System.String)Value;
        }
        private object get_31_Prescription_SelectedOn(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.SelectedOn;
        }
        private void set_31_Prescription_SelectedOn(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.SelectedOn = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_32_Prescription_Selector(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.Selector;
        }
        private void set_32_Prescription_Selector(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.Selector = (global::System.String)Value;
        }
        private object get_33_Prescription_LoadedOn(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.LoadedOn;
        }
        private void set_33_Prescription_LoadedOn(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.LoadedOn = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_34_Prescription_LoadedAt(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.LoadedAt;
        }
        private void set_34_Prescription_LoadedAt(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.LoadedAt = (global::System.String)Value;
        }
        private object get_35_Prescription_LoadedBy(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.LoadedBy;
        }
        private void set_35_Prescription_LoadedBy(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.LoadedBy = (global::System.String)Value;
        }
        private object get_36_Prescription_AdministeredOn(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.AdministeredOn;
        }
        private void set_36_Prescription_AdministeredOn(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.AdministeredOn = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_37_Prescription_AdministeredBy(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            return that.AdministeredBy;
        }
        private void set_37_Prescription_AdministeredBy(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Prescription)instance;
            that.AdministeredBy = (global::System.String)Value;
        }
        private object get_38_AddPrescriptionDialog_IsRecurring(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            return that.IsRecurring;
        }
        private void set_38_AddPrescriptionDialog_IsRecurring(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.AddPrescriptionDialog)instance;
            that.IsRecurring = (global::System.Boolean)Value;
        }
        private object get_39_LoginDialog_AuthenticatedUser(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.LoginDialog)instance;
            return that.AuthenticatedUser;
        }
        private void set_39_LoginDialog_AuthenticatedUser(object instance, object Value)
        {
            var that = (global::TPT_MMAS.View.Dialog.LoginDialog)instance;
            that.AuthenticatedUser = (global::TPT_MMAS.Shared.Model.Personnel)Value;
        }
        private object get_40_LoginDialog_Result(object instance)
        {
            var that = (global::TPT_MMAS.View.Dialog.LoginDialog)instance;
            return that.Result;
        }
        private object get_41_Personnel_FirstName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.FirstName;
        }
        private void set_41_Personnel_FirstName(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.FirstName = (global::System.String)Value;
        }
        private object get_42_Personnel_LastName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.LastName;
        }
        private void set_42_Personnel_LastName(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.LastName = (global::System.String)Value;
        }
        private object get_43_Personnel_ID(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.ID;
        }
        private void set_43_Personnel_ID(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_44_Personnel_MiddleName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.MiddleName;
        }
        private void set_44_Personnel_MiddleName(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.MiddleName = (global::System.String)Value;
        }
        private object get_45_Personnel_Username(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.Username;
        }
        private void set_45_Personnel_Username(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.Username = (global::System.String)Value;
        }
        private object get_46_Personnel_Title(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.Title;
        }
        private void set_46_Personnel_Title(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_47_Personnel_Role(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Personnel)instance;
            return that.Role;
        }
        private object get_48_Person_FullName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            return that.FullName;
        }
        private object get_49_Person_FullNameAbbreviated(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            return that.FullNameAbbreviated;
        }
        private object get_50_Person_ShortName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            return that.ShortName;
        }
        private object get_51_Person_FirstLastName(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            return that.FirstLastName;
        }
        private object get_52_Person_Photo(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            return that.Photo;
        }
        private void set_52_Person_Photo(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Model.Person)instance;
            that.Photo = (global::System.String)Value;
        }
        private object get_53_PatientGridView_ItemsSource(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemsSource;
        }
        private void set_53_PatientGridView_ItemsSource(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_54_PatientGridView_ItemColumns(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemColumns;
        }
        private void set_54_PatientGridView_ItemColumns(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemColumns = (global::System.Int32)Value;
        }
        private object get_55_PatientGridView_ItemRows(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemRows;
        }
        private void set_55_PatientGridView_ItemRows(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemRows = (global::System.Int32)Value;
        }
        private object get_56_PatientGridView_ItemTemplate(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemTemplate;
        }
        private void set_56_PatientGridView_ItemTemplate(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_57_PatientGridView_ItemHeight(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemHeight;
        }
        private void set_57_PatientGridView_ItemHeight(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemHeight = (global::System.Double)Value;
        }
        private object get_58_PatientGridView_ItemWidth(object instance)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            return that.ItemWidth;
        }
        private void set_58_PatientGridView_ItemWidth(object instance, object Value)
        {
            var that = (global::TPT_MMAS.Shared.Control.PatientGridView)instance;
            that.ItemWidth = (global::System.Double)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember xamlMember = null;
            global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "TPT_MMAS.ViewModel.ViewModelLocator.Medicines":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.ViewModel.ViewModelLocator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Medicines", "TPT_MMAS.ViewModel.MedicinesViewModel");
                xamlMember.Getter = get_0_ViewModelLocator_Medicines;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.ViewModel.ViewModelLocator.DevicesMain":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.ViewModel.ViewModelLocator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "DevicesMain", "TPT_MMAS.ViewModel.DevicesMainViewModel");
                xamlMember.Getter = get_1_ViewModelLocator_DevicesMain;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.ViewModel.ViewModelLocator.Patients":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.ViewModel.ViewModelLocator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Patients", "TPT_MMAS.ViewModel.PatientsViewModel");
                xamlMember.Getter = get_2_ViewModelLocator_Patients;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.ViewModel.ViewModelLocator.Patient":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.ViewModel.ViewModelLocator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Patient", "TPT_MMAS.Shared.ViewModel.PatientProfileViewModel");
                xamlMember.Getter = get_3_ViewModelLocator_Patient;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.ViewModel.ViewModelLocator.Shell":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.ViewModel.ViewModelLocator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Shell", "TPT_MMAS.ViewModel.ShellViewModel");
                xamlMember.Getter = get_4_ViewModelLocator_Shell;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shell.CurrentUser":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shell");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "CurrentUser", "TPT_MMAS.Shared.Model.Personnel");
                xamlMember.Getter = get_5_Shell_CurrentUser;
                xamlMember.Setter = set_5_Shell_CurrentUser;
                break;
            case "TPT_MMAS.View.Dialog.AddMedicineDialog.NewMedicine":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddMedicineDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "NewMedicine", "TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember.Getter = get_6_AddMedicineDialog_NewMedicine;
                xamlMember.Setter = set_6_AddMedicineDialog_NewMedicine;
                break;
            case "TPT_MMAS.View.Dialog.AddMedicineDialog.Result":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddMedicineDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Result", "TPT_MMAS.View.Dialog.AddMedicineResult");
                xamlMember.Getter = get_7_AddMedicineDialog_Result;
                xamlMember.Setter = set_7_AddMedicineDialog_Result;
                break;
            case "TPT_MMAS.Shared.Control.Iterator.Header":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.Iterator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_Iterator_Header;
                xamlMember.Setter = set_8_Iterator_Header;
                break;
            case "TPT_MMAS.Shared.Control.Iterator.Value":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.Iterator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Value", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_Iterator_Value;
                xamlMember.Setter = set_9_Iterator_Value;
                break;
            case "TPT_MMAS.Shared.Control.Iterator.MinValue":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.Iterator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "MinValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_Iterator_MinValue;
                xamlMember.Setter = set_10_Iterator_MinValue;
                break;
            case "TPT_MMAS.Shared.Control.Iterator.HeaderTemplate":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.Iterator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_Iterator_HeaderTemplate;
                xamlMember.Setter = set_11_Iterator_HeaderTemplate;
                break;
            case "TPT_MMAS.Shared.Control.Iterator.MaxValue":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.Iterator");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "MaxValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_Iterator_MaxValue;
                xamlMember.Setter = set_12_Iterator_MaxValue;
                break;
            case "TPT_MMAS.View.Dialog.AddPrescriptionDialog.SuggestedMedicines":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddPrescriptionDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "SuggestedMedicines", "System.Collections.ObjectModel.ObservableCollection`1<TPT_MMAS.Shared.Model.MedicineInventory>");
                xamlMember.Getter = get_13_AddPrescriptionDialog_SuggestedMedicines;
                xamlMember.Setter = set_13_AddPrescriptionDialog_SuggestedMedicines;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.ID":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_14_MedicineInventory_ID;
                xamlMember.Setter = set_14_MedicineInventory_ID;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.GenericName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "GenericName", "String");
                xamlMember.Getter = get_15_MedicineInventory_GenericName;
                xamlMember.Setter = set_15_MedicineInventory_GenericName;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.BrandName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "BrandName", "String");
                xamlMember.Getter = get_16_MedicineInventory_BrandName;
                xamlMember.Setter = set_16_MedicineInventory_BrandName;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.Dosage":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Dosage", "String");
                xamlMember.Getter = get_17_MedicineInventory_Dosage;
                xamlMember.Setter = set_17_MedicineInventory_Dosage;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.StocksLeft":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "StocksLeft", "Int32");
                xamlMember.Getter = get_18_MedicineInventory_StocksLeft;
                xamlMember.Setter = set_18_MedicineInventory_StocksLeft;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.TimeLastAdded":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "TimeLastAdded", "System.DateTime");
                xamlMember.Getter = get_19_MedicineInventory_TimeLastAdded;
                xamlMember.Setter = set_19_MedicineInventory_TimeLastAdded;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.TimeLastDispensed":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "TimeLastDispensed", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_20_MedicineInventory_TimeLastDispensed;
                xamlMember.Setter = set_20_MedicineInventory_TimeLastDispensed;
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.Name":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_21_MedicineInventory_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.MedicineInventory.NameWithDosage":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "NameWithDosage", "String");
                xamlMember.Getter = get_22_MedicineInventory_NameWithDosage;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.View.Dialog.AddPrescriptionDialog.AddedItem":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddPrescriptionDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AddedItem", "TPT_MMAS.Shared.Model.Prescription");
                xamlMember.Getter = get_23_AddPrescriptionDialog_AddedItem;
                xamlMember.Setter = set_23_AddPrescriptionDialog_AddedItem;
                break;
            case "TPT_MMAS.View.Dialog.AddPrescriptionDialog.AddedItems":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddPrescriptionDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AddedItems", "System.Collections.Generic.List`1<TPT_MMAS.Shared.Model.Prescription>");
                xamlMember.Getter = get_24_AddPrescriptionDialog_AddedItems;
                xamlMember.Setter = set_24_AddPrescriptionDialog_AddedItems;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.ID":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_25_Prescription_ID;
                xamlMember.Setter = set_25_Prescription_ID;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.Medicine":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Medicine", "TPT_MMAS.Shared.Model.MedicineInventory");
                xamlMember.Getter = get_26_Prescription_Medicine;
                xamlMember.Setter = set_26_Prescription_Medicine;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.Schedule":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Schedule", "System.DateTime");
                xamlMember.Getter = get_27_Prescription_Schedule;
                xamlMember.Setter = set_27_Prescription_Schedule;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.Amount":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Amount", "Int32");
                xamlMember.Getter = get_28_Prescription_Amount;
                xamlMember.Setter = set_28_Prescription_Amount;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.AddedOn":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AddedOn", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_29_Prescription_AddedOn;
                xamlMember.Setter = set_29_Prescription_AddedOn;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.AddedBy":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AddedBy", "String");
                xamlMember.Getter = get_30_Prescription_AddedBy;
                xamlMember.Setter = set_30_Prescription_AddedBy;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.SelectedOn":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "SelectedOn", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_31_Prescription_SelectedOn;
                xamlMember.Setter = set_31_Prescription_SelectedOn;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.Selector":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Selector", "String");
                xamlMember.Getter = get_32_Prescription_Selector;
                xamlMember.Setter = set_32_Prescription_Selector;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.LoadedOn":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "LoadedOn", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_33_Prescription_LoadedOn;
                xamlMember.Setter = set_33_Prescription_LoadedOn;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.LoadedAt":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "LoadedAt", "String");
                xamlMember.Getter = get_34_Prescription_LoadedAt;
                xamlMember.Setter = set_34_Prescription_LoadedAt;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.LoadedBy":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "LoadedBy", "String");
                xamlMember.Getter = get_35_Prescription_LoadedBy;
                xamlMember.Setter = set_35_Prescription_LoadedBy;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.AdministeredOn":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AdministeredOn", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_36_Prescription_AdministeredOn;
                xamlMember.Setter = set_36_Prescription_AdministeredOn;
                break;
            case "TPT_MMAS.Shared.Model.Prescription.AdministeredBy":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Prescription");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AdministeredBy", "String");
                xamlMember.Getter = get_37_Prescription_AdministeredBy;
                xamlMember.Setter = set_37_Prescription_AdministeredBy;
                break;
            case "TPT_MMAS.View.Dialog.AddPrescriptionDialog.IsRecurring":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.AddPrescriptionDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "IsRecurring", "Boolean");
                xamlMember.Getter = get_38_AddPrescriptionDialog_IsRecurring;
                xamlMember.Setter = set_38_AddPrescriptionDialog_IsRecurring;
                break;
            case "TPT_MMAS.View.Dialog.LoginDialog.AuthenticatedUser":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.LoginDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "AuthenticatedUser", "TPT_MMAS.Shared.Model.Personnel");
                xamlMember.Getter = get_39_LoginDialog_AuthenticatedUser;
                xamlMember.Setter = set_39_LoginDialog_AuthenticatedUser;
                break;
            case "TPT_MMAS.View.Dialog.LoginDialog.Result":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.View.Dialog.LoginDialog");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Result", "System.Nullable`1<TPT_MMAS.View.Dialog.LoginDialogResult>");
                xamlMember.Getter = get_40_LoginDialog_Result;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Personnel.FirstName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "FirstName", "String");
                xamlMember.Getter = get_41_Personnel_FirstName;
                xamlMember.Setter = set_41_Personnel_FirstName;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.LastName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "LastName", "String");
                xamlMember.Getter = get_42_Personnel_LastName;
                xamlMember.Setter = set_42_Personnel_LastName;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.ID":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_43_Personnel_ID;
                xamlMember.Setter = set_43_Personnel_ID;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.MiddleName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "MiddleName", "String");
                xamlMember.Getter = get_44_Personnel_MiddleName;
                xamlMember.Setter = set_44_Personnel_MiddleName;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.Username":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Username", "String");
                xamlMember.Getter = get_45_Personnel_Username;
                xamlMember.Setter = set_45_Personnel_Username;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.Title":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_46_Personnel_Title;
                xamlMember.Setter = set_46_Personnel_Title;
                break;
            case "TPT_MMAS.Shared.Model.Personnel.Role":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Personnel");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Role", "TPT_MMAS.Shared.Model.Role");
                xamlMember.Getter = get_47_Personnel_Role;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Person.FullName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Person");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "FullName", "String");
                xamlMember.Getter = get_48_Person_FullName;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Person.FullNameAbbreviated":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Person");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "FullNameAbbreviated", "String");
                xamlMember.Getter = get_49_Person_FullNameAbbreviated;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Person.ShortName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Person");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ShortName", "String");
                xamlMember.Getter = get_50_Person_ShortName;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Person.FirstLastName":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Person");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "FirstLastName", "String");
                xamlMember.Getter = get_51_Person_FirstLastName;
                xamlMember.SetIsReadOnly();
                break;
            case "TPT_MMAS.Shared.Model.Person.Photo":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Model.Person");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "Photo", "String");
                xamlMember.Getter = get_52_Person_Photo;
                xamlMember.Setter = set_52_Person_Photo;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemsSource":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_PatientGridView_ItemsSource;
                xamlMember.Setter = set_53_PatientGridView_ItemsSource;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemColumns":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemColumns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_PatientGridView_ItemColumns;
                xamlMember.Setter = set_54_PatientGridView_ItemColumns;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemRows":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemRows", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_PatientGridView_ItemRows;
                xamlMember.Setter = set_55_PatientGridView_ItemRows;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemTemplate":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_PatientGridView_ItemTemplate;
                xamlMember.Setter = set_56_PatientGridView_ItemTemplate;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemHeight":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_PatientGridView_ItemHeight;
                xamlMember.Setter = set_57_PatientGridView_ItemHeight;
                break;
            case "TPT_MMAS.Shared.Control.PatientGridView.ItemWidth":
                userType = (global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TPT_MMAS.Shared.Control.PatientGridView");
                xamlMember = new global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlMember(this, "ItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_PatientGridView_ItemWidth;
                xamlMember.Setter = set_58_PatientGridView_ItemWidth;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlSystemBaseType
    {
        global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::TPT_MMAS.TPT_MMAS_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

