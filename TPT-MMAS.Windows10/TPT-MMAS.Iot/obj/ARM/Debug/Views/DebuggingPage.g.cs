#pragma checksum "C:\Users\jrpal_000\Source\Repos\TPT-MMAS\TPT-MMAS\TPT-MMAS.Iot\Views\DebuggingPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "5E23D3C06F4F5BD21D64E5E97D9B70ED"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TPT_MMAS.Iot.Views
{
    partial class DebuggingPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_DataContext(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DataContext = value;
            }
        };

        private class DebuggingPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IDebuggingPage_Bindings
        {
            private global::TPT_MMAS.Iot.Views.DebuggingPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.Grid obj5;
            private global::Windows.UI.Xaml.Controls.Grid obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.Grid obj9;
            private global::Windows.UI.Xaml.Controls.Grid obj10;
            private global::Windows.UI.Xaml.Controls.Grid obj11;
            private global::Windows.UI.Xaml.Controls.Grid obj12;
            private global::Windows.UI.Xaml.Controls.Grid obj13;
            private global::Windows.UI.Xaml.Controls.Grid obj14;
            private global::Windows.UI.Xaml.Controls.Grid obj15;
            private global::Windows.UI.Xaml.Controls.Grid obj16;

            private DebuggingPage_obj1_BindingsTracking bindingsTracking;

            public DebuggingPage_obj1_Bindings()
            {
                this.bindingsTracking = new DebuggingPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 13:
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 15:
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 16:
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    default:
                        break;
                }
            }

            // IDebuggingPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // DebuggingPage_obj1_Bindings

            public void SetDataRoot(global::TPT_MMAS.Iot.Views.DebuggingPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TPT_MMAS.Iot.Views.DebuggingPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM(obj.VM, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM(phase);
                    }
                }
            }
            private void Update_VM(global::TPT_MMAS.Iot.ViewModel.DebuggingViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_ScannedData(obj.ScannedData, phase);
                        this.Update_VM_IsTrayOpen(obj.IsTrayOpen, phase);
                        this.Update_VM_TrayController(obj.TrayController, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM_ScannedData(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM_TrayController(phase);
                    }
                }
            }
            private void Update_VM_ScannedData(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, "scan now");
                }
            }
            private void Update_VM_IsTrayOpen(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BooleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), "false", null));
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BooleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_VM_TrayController(global::TPT_MMAS.Iot.Hardware.TrayController obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_TrayController_RawData(obj.RawData, phase);
                        this.Update_VM_TrayController_TrayContainers(obj.TrayContainers, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_VM_TrayController_RawData(phase);
                    }
                }
            }
            private void Update_VM_TrayController_RawData(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers(global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VM_TrayController_TrayContainers(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_TrayController_TrayContainers_0_(obj[0], phase);
                        this.Update_VM_TrayController_TrayContainers_1_(obj[1], phase);
                        this.Update_VM_TrayController_TrayContainers_2_(obj[2], phase);
                        this.Update_VM_TrayController_TrayContainers_3_(obj[3], phase);
                        this.Update_VM_TrayController_TrayContainers_4_(obj[4], phase);
                        this.Update_VM_TrayController_TrayContainers_5_(obj[5], phase);
                        this.Update_VM_TrayController_TrayContainers_6_(obj[6], phase);
                        this.Update_VM_TrayController_TrayContainers_7_(obj[7], phase);
                    }
                }
            }
            private void Update_VM_TrayController_TrayContainers_0_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj9, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_1_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj10, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_2_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj11, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_3_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj12, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_4_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj13, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_5_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj14, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_6_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj15, obj, null);
                }
            }
            private void Update_VM_TrayController_TrayContainers_7_(global::TPT_MMAS.Iot.Hardware.TrayContainer obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj16, obj, null);
                }
            }

            private void UpdateFallback_VM(int phase)
            {
                this.UpdateFallback_VM_ScannedData(phase);
                this.UpdateFallback_VM_TrayController(phase);
            }

            private void UpdateFallback_VM_ScannedData(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, "error", null);
                }
            }

            private void UpdateFallback_VM_TrayController(int phase)
            {
                this.UpdateFallback_VM_TrayController_RawData(phase);
            }

            private void UpdateFallback_VM_TrayController_RawData(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, "DebuggingPage.xaml Loaded, On/Off counter to be implemented", null);
                }
            }

            private class DebuggingPage_obj1_BindingsTracking
            {
                global::System.WeakReference<DebuggingPage_obj1_Bindings> WeakRefToBindingObj; 

                public DebuggingPage_obj1_BindingsTracking(DebuggingPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<DebuggingPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_VM(null);
                    UpdateChildListeners_VM_TrayController_TrayContainers(null);
                }

                public void PropertyChanged_VM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.ViewModel.DebuggingViewModel obj = sender as global::TPT_MMAS.Iot.ViewModel.DebuggingViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_VM_ScannedData(obj.ScannedData, DATA_CHANGED);
                                    bindings.Update_VM_IsTrayOpen(obj.IsTrayOpen, DATA_CHANGED);
                                    bindings.Update_VM_TrayController(obj.TrayController, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_VM_ScannedData(DATA_CHANGED);
                                bindings.UpdateFallback_VM_TrayController(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ScannedData":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_ScannedData(obj.ScannedData, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_VM_ScannedData(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsTrayOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsTrayOpen(obj.IsTrayOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TrayController":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_TrayController(obj.TrayController, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_VM_TrayController(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TPT_MMAS.Iot.ViewModel.DebuggingViewModel cache_VM = null;
                public void UpdateChildListeners_VM(global::TPT_MMAS.Iot.ViewModel.DebuggingViewModel obj)
                {
                    if (obj != cache_VM)
                    {
                        if (cache_VM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VM).PropertyChanged -= PropertyChanged_VM;
                            cache_VM = null;
                        }
                        if (obj != null)
                        {
                            cache_VM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VM;
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_VM_TrayController_TrayContainers_0_(obj[0], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_1_(obj[1], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_2_(obj[2], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_3_(obj[3], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_4_(obj[4], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_5_(obj[5], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_6_(obj[6], DATA_CHANGED);
                                    bindings.Update_VM_TrayController_TrayContainers_7_(obj[7], DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_VM_TrayController_TrayContainers(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer>;
                if (obj != null)
                {
                        bindings.Update_VM_TrayController_TrayContainers_0_(obj[0], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_1_(obj[1], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_2_(obj[2], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_3_(obj[3], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_4_(obj[4], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_5_(obj[5], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_6_(obj[6], DATA_CHANGED);
                        bindings.Update_VM_TrayController_TrayContainers_7_(obj[7], DATA_CHANGED);
                }
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer> cache_VM_TrayController_TrayContainers = null;
                public void UpdateChildListeners_VM_TrayController_TrayContainers(global::System.Collections.ObjectModel.ObservableCollection<global::TPT_MMAS.Iot.Hardware.TrayContainer> obj)
                {
                    if (obj != cache_VM_TrayController_TrayContainers)
                    {
                        if (cache_VM_TrayController_TrayContainers != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VM_TrayController_TrayContainers).PropertyChanged -= PropertyChanged_VM_TrayController_TrayContainers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_VM_TrayController_TrayContainers).CollectionChanged -= CollectionChanged_VM_TrayController_TrayContainers;
                            cache_VM_TrayController_TrayContainers = null;
                        }
                        if (obj != null)
                        {
                            cache_VM_TrayController_TrayContainers = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VM_TrayController_TrayContainers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_VM_TrayController_TrayContainers;
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_0_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_1_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_2_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_3_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_4_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_5_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_6_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void PropertyChanged_VM_TrayController_TrayContainers_7_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DebuggingPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::TPT_MMAS.Iot.Hardware.TrayContainer obj = sender as global::TPT_MMAS.Iot.Hardware.TrayContainer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.PivotItem element2 = (global::Windows.UI.Xaml.Controls.PivotItem)(target);
                    #line 264 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.PivotItem)element2).Loaded += this.OnRfidTabLoaded;
                    #line default
                }
                break;
            case 3:
                {
                    this.tb_rfdata = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 4:
                {
                    this.btn_rfredo = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 269 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.btn_rfredo).Click += this.btn_rfredo_Click;
                    #line default
                }
                break;
            case 7:
                {
                    this.grid_TrayControls = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8:
                {
                    this.tb_statusArea = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 17:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element17 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 241 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element17).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 18:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element18 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 217 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element18).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 19:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element19 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 193 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element19).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 20:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element20 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 169 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element20).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 21:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element21 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 145 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element21).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 22:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element22 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 121 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element22).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 23:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element23 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 97 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element23).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            case 24:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element24 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 73 "..\..\..\Views\DebuggingPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element24).Click += this.OnTrayButtonClick;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    DebuggingPage_obj1_Bindings bindings = new DebuggingPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

